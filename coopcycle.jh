entity Client {
    adresse String
    name String required pattern(/^[A-Z][a-z]+\d$/)
}

entity Coursier {
    coordonne String required
    noteCoursier Integer min(0) max(5)
}

entity Commercant {
    adresse String required
}

entity Utilisateur {
    id Integer required
    name String required pattern(/^[A-Z][a-z]+\d$/)
    firstname String required pattern(/^[A-Z][a-z]+\d$/)
    mail String required
    tel String required
}

entity Panier {
    name String required pattern(/^[A-Z][a-z]+\d$/)
    prix Integer required min(0)
}

entity Course {
    prix Integer required min(0)
    distance Float
    date LocalDate required
}

entity Produit {
    name String required pattern(/^[A-Z][a-z]+\d$/)
    prix Integer required min(0)
    description String required
}

entity Commerce {
    adresse String required
    name String required
    noteCommerce Integer min(0) max(5)
}

entity Restaurant {
    resto TypeRestaurant
}

enum TypeRestaurant {
    TACOS, PIZZERIA, CREPERIE, BURGER, BOULANGERIE
}

entity AutreCommerce{
    typeCommerce String required
}

relationship OneToMany {
    Utilisateur to Panier
    Panier to Commerce
    Panier to Course
}

relationship OneToOne {
    Utilisateur to Client
    Utilisateur to Commercant
    Utilisateur to Coursier
    Commerce to Utilisateur
    Commerce to Restaurant
    Commerce to AutreCommerce
}

relationship ManyToMany {
    Produit to Commerce
    Panier to Produit
}